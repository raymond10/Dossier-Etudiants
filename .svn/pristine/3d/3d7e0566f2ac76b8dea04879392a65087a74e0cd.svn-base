{
    attributes = (
        {
            allowsNull = Y; 
            columnName = "AUTEUR_MAJ"; 
            externalType = VARCHAR2; 
            name = auteurMaj; 
            valueClassName = NSString; 
            valueType = S; 
            width = 12; 
        }, 
        {
            allowsNull = Y; 
            columnName = "CIVILITE_$C"; 
            externalType = VARCHAR2; 
            name = civilitec; 
            valueClassName = NSString; 
            valueType = S; 
            width = 3; 
        }, 
        {
            allowsNull = Y; 
            columnName = "CODE_CONFID"; 
            externalType = VARCHAR2; 
            name = codeConfid; 
            valueClassName = NSString; 
            valueType = S; 
            width = 8; 
        }, 
        {
            allowsNull = Y; 
            columnName = "CRE_DATE"; 
            externalType = DATE; 
            name = creDate; 
            valueClassName = NSCalendarDate; 
            valueType = D; 
        }, 
        {
            allowsNull = Y; 
            className = "java.lang.Number"; 
            columnName = "HARP_INDIV_ID"; 
            externalType = NUMBER; 
            name = harpIndivId; 
            precision = 8; 
            valueType = l; 
        }, 
        {
            allowsNull = Y; 
            className = "java.lang.Number"; 
            columnName = "HOMON_NO"; 
            externalType = NUMBER; 
            name = homonNo; 
            precision = 1; 
            valueType = l; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMPORT_DATE"; 
            externalType = DATE; 
            name = importDate; 
            valueClassName = NSCalendarDate; 
            valueType = D; 
        }, 
        {
            className = "java.lang.Number"; 
            columnName = "INDIV_ID"; 
            externalType = NUMBER; 
            isReadOnly = Y; 
            name = indivId; 
            precision = 7; 
            valueType = l; 
        }, 
        {
            allowsNull = Y; 
            columnName = LOGIN; 
            externalType = VARCHAR2; 
            name = login; 
            valueClassName = NSString; 
            valueType = S; 
            width = 8; 
        }, 
        {
            allowsNull = Y; 
            columnName = "MODIF_DATE"; 
            externalType = DATE; 
            name = modifDate; 
            valueClassName = NSCalendarDate; 
            valueType = D; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NAIS_COM"; 
            externalType = VARCHAR2; 
            name = naisCom; 
            valueClassName = NSString; 
            valueType = S; 
            width = 40; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NAIS_DATE"; 
            externalType = DATE; 
            name = naisDate; 
            valueClassName = NSCalendarDate; 
            valueType = D; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NAIS_DEPT_$C"; 
            externalType = VARCHAR2; 
            name = naisDeptc; 
            valueClassName = NSString; 
            valueType = S; 
            width = 3; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NAIS_PAYS_$C"; 
            externalType = VARCHAR2; 
            name = naisPaysc; 
            valueClassName = NSString; 
            valueType = S; 
            width = 3; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NAT_PAYS_$C"; 
            externalType = VARCHAR2; 
            name = natPaysc; 
            valueClassName = NSString; 
            valueType = S; 
            width = 3; 
        }, 
        {
            allowsNull = Y; 
            columnName = NNI; 
            externalType = VARCHAR2; 
            name = nni; 
            valueClassName = NSString; 
            valueType = S; 
            width = 13; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NNI_CLE"; 
            externalType = VARCHAR2; 
            name = nniCle; 
            valueClassName = NSString; 
            valueType = S; 
            width = 2; 
        }, 
        {
            columnName = NOM; 
            externalType = VARCHAR2; 
            name = nom; 
            valueClassName = NSString; 
            valueType = S; 
            width = 40; 
        }, 
        {
            columnName = "NOM_NAIS"; 
            externalType = VARCHAR2; 
            name = nomNais; 
            valueClassName = NSString; 
            valueType = S; 
            width = 40; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NOM_TYPE"; 
            externalType = VARCHAR2; 
            name = nomType; 
            valueClassName = NSString; 
            valueType = S; 
            width = 1; 
        }, 
        {
            allowsNull = Y; 
            columnName = "PASSWD_CRYPT"; 
            externalType = VARCHAR2; 
            name = passwdCrypt; 
            valueClassName = NSString; 
            valueType = S; 
            width = 15; 
        }, 
        {
            columnName = PRENOM; 
            externalType = VARCHAR2; 
            name = prenom; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            columnName = "PRENOM_1"; 
            externalType = VARCHAR2; 
            name = prenom1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            allowsNull = Y; 
            columnName = "PRENOM_2"; 
            externalType = VARCHAR2; 
            name = prenom2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            allowsNull = Y; 
            columnName = "PRENOM_3"; 
            externalType = VARCHAR2; 
            name = prenom3; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            allowsNull = Y; 
            columnName = "PRENOM_TYPE"; 
            externalType = VARCHAR2; 
            name = prenomType; 
            valueClassName = NSString; 
            valueType = S; 
            width = 1; 
        }, 
        {
            allowsNull = Y; 
            columnName = "SITUATION_$C"; 
            externalType = VARCHAR2; 
            name = situationc; 
            valueClassName = NSString; 
            valueType = S; 
            width = 5; 
        }, 
        {
            allowsNull = Y; 
            className = "java.lang.Number"; 
            columnName = "VMS_INDIV_ID"; 
            externalType = NUMBER; 
            name = vmsIndivId; 
            precision = 7; 
            valueType = l; 
        }
    ); 
    attributesUsedForLocking = (
        auteurMaj, 
        civilitec, 
        codeConfid, 
        creDate, 
        harpIndivId, 
        homonNo, 
        importDate, 
        indivId, 
        login, 
        modifDate, 
        naisCom, 
        naisDate, 
        naisDeptc, 
        naisPaysc, 
        natPaysc, 
        nni, 
        nniCle, 
        nom, 
        nomNais, 
        nomType, 
        passwdCrypt, 
        prenom, 
        prenom1, 
        prenom2, 
        prenom3, 
        prenomType, 
        situationc, 
        vmsIndivId
    ); 
    className = "etudiants.utt.fr.eo.EOIndividu"; 
    classProperties = (
        auteurMaj, 
        civilitec, 
        codeConfid, 
        creDate, 
        eoEtudiantInscrAdms, 
        eoVueAfficherdiplomes, 
        eoVueAfficherparcourses, 
        etudiants, 
        etudiants1, 
        etuInscrAdms, 
        harpIndivId, 
        homonNo, 
        importDate, 
        indEmails, 
        indivId, 
        login, 
        mineurs, 
        modifDate, 
        naisCom, 
        naisDate, 
        naisDeptc, 
        naisPaysc, 
        natPaysc, 
        nni, 
        nniCle, 
        nom, 
        nomNais, 
        nomType, 
        passwdCrypt, 
        prenom, 
        prenom1, 
        prenom2, 
        prenom3, 
        prenomType, 
        profilImpression, 
        refCivilite, 
        situationc, 
        uvOuvResps, 
        vmsIndivId
    ); 
    externalName = "GERRY.INDIVIDU"; 
    name = EOIndividu; 
    primaryKeyAttributes = (indivId); 
    relationships = (
        {
            destination = EOEtudiantInscrAdm; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = conseillerId; sourceAttribute = indivId; }); 
            name = eoEtudiantInscrAdms; 
        }, 
        {
            destination = EOVueAfficherdiplome; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = numeroEtu; sourceAttribute = indivId; }); 
            name = eoVueAfficherdiplomes; 
        }, 
        {
            destination = EOVueAfficherparcours; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = numeroEtu; sourceAttribute = indivId; }); 
            name = eoVueAfficherparcourses; 
        }, 
        {
            destination = EOEtudiant; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = conseillerId; sourceAttribute = indivId; }); 
            name = etudiants; 
        }, 
        {
            destination = EOEtudiant; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = indivId; sourceAttribute = indivId; }); 
            name = etudiants1; 
        }, 
        {
            destination = EOEtudiantInscrAdm; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = etuId; sourceAttribute = indivId; }); 
            name = etuInscrAdms; 
        }, 
        {
            destination = EOIndEmail; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = indivId; sourceAttribute = indivId; }); 
            name = indEmails; 
        }, 
        {
            destination = EOEtuMineur; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = etuId; sourceAttribute = indivId; }); 
            name = mineurs; 
        }, 
        {
            destination = EOProfilImpression; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = ETUID; sourceAttribute = indivId; }); 
            name = profilImpression; 
        }, 
        {
            destination = EORefCivilite; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = civilitec; sourceAttribute = civilitec; }); 
            name = refCivilite; 
        }, 
        {
            destination = UvOuvResp; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = indivId; sourceAttribute = indivId; }); 
            name = uvOuvResps; 
        }
    ); 
}
